apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    flavorDimensions "default"

    defaultConfig {
        applicationId "com.putao.ptx.qrcode"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode project.properties["PROJ_VERSIONCODE"] as int
        versionName rootProject.getVersionName()
        manifestPlaceholders rootProject.ext.MANIFESTPLACEHOLDERS
        //语言环境和logcat日志TAG设置
        buildConfigField "String", "LOG_TAG", "\"${rootProject.ext.APP_LOG_TAG}\""
        buildConfigField "boolean", "INNER_TEST", "false"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        flavorDimensions "versionCode"
        project.archivesBaseName = "qrcode-v$versionName"
    }
    signingConfigs {
        release {
            storeFile file(SIGN_FILEPATH)
            storePassword SIGN_STOREPASSWORD
            keyAlias SIGN_KEYALIAS
            keyPassword SIGN_KEYPASSWORD
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['src/main/assets']
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    //产品渠道配置
    productFlavors {
        innerTest {
            buildConfigField "boolean", "INNER_TEST", "true"
            versionName = "T" + rootProject.getVersionName()
        }

        online { versionName = "V" + rootProject.getVersionName() }

        huawei { versionName = "V" + defaultConfig.versionName }

        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'

    implementation 'pub.devrel:easypermissions:0.2.0'
    implementation 'com.umeng.analytics:analytics:latest.integration'

    implementation 'com.jusenr.android.library:androidtools:1.3.9'

    implementation project(':qrcode')
//    compile "com.jusenr.android.library:qrcode:$PROJ_VERSIONNAME"
}